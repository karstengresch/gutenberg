"use strict";(self.webpackChunkgutenberg=self.webpackChunkgutenberg||[]).push([[4325],{"./packages/components/src/number-control/stories/index.story.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__,Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder});var _wordpress_element__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/index.js"),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/components/src/number-control/index.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components (Experimental)/NumberControl",component:___WEBPACK_IMPORTED_MODULE_1__.Z,argTypes:{onChange:{action:"onChange"},prefix:{control:{type:"text"}},step:{control:{type:"text"}},suffix:{control:{type:"text"}},type:{control:{type:"text"}},value:{control:null}},parameters:{sourceLink:"packages/components/src/number-control",controls:{expanded:!0},docs:{canvas:{sourceState:"shown"}}}},Default=(({onChange,...props})=>{const[value,setValue]=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_2__.useState)("0"),[isValidValue,setIsValidValue]=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_2__.useState)(!0);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.Z,{...props,value,onChange:(v,extra)=>{setValue(v),setIsValidValue(extra.event.target.validity.valid),onChange?.(v,extra)}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Is valid? ",isValidValue?"Yes":"No"]})]})}).bind({});Default.args={label:"Value"},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"({\n  onChange,\n  ...props\n}) => {\n  const [value, setValue] = useState<string | undefined>('0');\n  const [isValidValue, setIsValidValue] = useState(true);\n  return <>\n            <NumberControl {...props} value={value} onChange={(v, extra) => {\n      setValue(v);\n      setIsValidValue((extra.event.target as HTMLInputElement).validity.valid);\n      onChange?.(v, extra);\n    }} />\n            <p>Is valid? {isValidValue ? 'Yes' : 'No'}</p>\n        </>;\n}",...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]}}]);