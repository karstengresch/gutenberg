"use strict";(self.webpackChunkgutenberg=self.webpackChunkgutenberg||[]).push([[6758],{"./packages/icons/build-module/library/upload.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/primitives/build-module/svg/index.js");const __WEBPACK_DEFAULT_EXPORT__=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.Wj,{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.y$,{d:"M18.5 15v3.5H13V6.7l4.5 4.1 1-1.1-6.2-5.8-5.8 5.8 1 1.1 4-4v11.7h-6V15H4v5h16v-5z"}))},"./packages/components/src/form-file-upload/stories/index.story.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllowMultipleFiles:()=>AllowMultipleFiles,Default:()=>Default,RestrictFileTypes:()=>RestrictFileTypes,WithCustomRender:()=>WithCustomRender,WithIcon:()=>WithIcon,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_story});var upload=__webpack_require__("./packages/icons/build-module/library/upload.js"),react=__webpack_require__("./node_modules/react/index.js"),src_button=__webpack_require__("./packages/components/src/button/index.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function FormFileUpload({accept,children,multiple=!1,onChange,onClick,render,...props}){const ref=(0,react.useRef)(null),openFileDialog=()=>{ref.current?.click()},ui=render?render({openFileDialog}):(0,jsx_runtime.jsx)(src_button.ZP,{onClick:openFileDialog,...props,children});return(0,jsx_runtime.jsxs)("div",{className:"components-form-file-upload",children:[ui,(0,jsx_runtime.jsx)("input",{type:"file",ref,multiple,style:{display:"none"},accept,onChange,onClick,"data-testid":"form-file-upload-input"})]})}FormFileUpload.displayName="FormFileUpload";const form_file_upload=FormFileUpload;try{FormFileUpload.displayName="FormFileUpload",FormFileUpload.__docgenInfo={description:"FormFileUpload is a component that allows users to select files from their local device.\n\n```jsx\nimport { FormFileUpload } from '@wordpress/components';\n\nconst MyFormFileUpload = () => (\n  <FormFileUpload\n    accept=\"image/*\"\n    onChange={ ( event ) => console.log( event.currentTarget.files ) }\n  >\n    Upload\n  </FormFileUpload>\n);\n```",displayName:"FormFileUpload",props:{accept:{defaultValue:null,description:"A string passed to `input` element that tells the browser which file types can be\nupload to the upload by the user use. e.g: `image/*,video/*`.\n@see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#Unique_file_type_specifiers.",name:"accept",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"Children are passed as children of `Button`.",name:"children",required:!1,type:{name:"ReactNode"}},icon:{defaultValue:null,description:"The icon to render in the `Button`.",name:"icon",required:!1,type:{name:"IconType"}},multiple:{defaultValue:{value:"false"},description:"Whether to allow multiple selection of files or not.",name:"multiple",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Callback function passed directly to the `input` file element.\n\nSelect files will be available in `event.currentTarget.files`.",name:"onChange",required:!0,type:{name:"ChangeEventHandler<HTMLInputElement>"}},onClick:{defaultValue:null,description:"Callback function passed directly to the `input` file element.\n\nThis can be useful when you want to force a `change` event to fire when\nthe user chooses the same file again. To do this, set the target value to\nan empty string in the `onClick` function.\n\n```jsx\n<FormFileUpload\n\tonClick={ ( event ) => ( event.target.value = '' ) }\n\tonChange={ onChange }\n>\n\tUpload\n</FormFileUpload>\n```",name:"onClick",required:!1,type:{name:"MouseEventHandler<HTMLInputElement>"}},render:{defaultValue:null,description:"Optional callback function used to render the UI.\n\nIf passed, the component does not render the default UI (a button) and\ncalls this function to render it. The function receives an object with\nproperty `openFileDialog`, a function that, when called, opens the browser\nnative file upload modal window.",name:"render",required:!1,type:{name:"(arg: { openFileDialog: () => void; }) => ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/form-file-upload/index.tsx#FormFileUpload"]={docgenInfo:FormFileUpload.__docgenInfo,name:"FormFileUpload",path:"packages/components/src/form-file-upload/index.tsx#FormFileUpload"})}catch(__react_docgen_typescript_loader_error){}const index_story={title:"Components/FormFileUpload",component:form_file_upload,argTypes:{icon:{control:{type:null}},onChange:{action:"onChange",control:{type:null}},onClick:{control:{type:null}}},parameters:{sourceLink:"packages/components/src/form-file-upload",controls:{expanded:!0},docs:{canvas:{sourceState:"shown"}}}},Template=props=>(0,jsx_runtime.jsx)(form_file_upload,{...props});Template.displayName="Template";const Default=Template.bind({});Default.args={children:"Select file"};const RestrictFileTypes=Template.bind({});RestrictFileTypes.args={...Default.args,accept:"image/*",children:"Select image"};const AllowMultipleFiles=Template.bind({});AllowMultipleFiles.args={...Default.args,children:"Select files",multiple:!0};const WithIcon=Template.bind({});WithIcon.args={...Default.args,children:"Upload",icon:upload.Z};const WithCustomRender=Template.bind({});WithCustomRender.args={...Default.args,render:({openFileDialog})=>(0,jsx_runtime.jsx)("button",{onClick:openFileDialog,children:"Custom Upload Button"})},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"props => {\n  return <FormFileUpload {...props} />;\n}",...Default.parameters?.docs?.source}}},RestrictFileTypes.parameters={...RestrictFileTypes.parameters,docs:{...RestrictFileTypes.parameters?.docs,source:{originalSource:"props => {\n  return <FormFileUpload {...props} />;\n}",...RestrictFileTypes.parameters?.docs?.source}}},AllowMultipleFiles.parameters={...AllowMultipleFiles.parameters,docs:{...AllowMultipleFiles.parameters?.docs,source:{originalSource:"props => {\n  return <FormFileUpload {...props} />;\n}",...AllowMultipleFiles.parameters?.docs?.source}}},WithIcon.parameters={...WithIcon.parameters,docs:{...WithIcon.parameters?.docs,source:{originalSource:"props => {\n  return <FormFileUpload {...props} />;\n}",...WithIcon.parameters?.docs?.source}}},WithCustomRender.parameters={...WithCustomRender.parameters,docs:{...WithCustomRender.parameters?.docs,source:{originalSource:"props => {\n  return <FormFileUpload {...props} />;\n}",...WithCustomRender.parameters?.docs?.source},description:{story:"Render a custom trigger button by passing a render function to the `render` prop.\n\n```jsx\n( { openFileDialog } ) => <button onClick={ openFileDialog }>Custom Upload Button</button>\n```",...WithCustomRender.parameters?.docs?.description}}};const __namedExportsOrder=["Default","RestrictFileTypes","AllowMultipleFiles","WithIcon","WithCustomRender"];try{WithCustomRender.displayName="WithCustomRender",WithCustomRender.__docgenInfo={description:"Render a custom trigger button by passing a render function to the `render` prop.\n\n```jsx\n( { openFileDialog } ) => <button onClick={ openFileDialog }>Custom Upload Button</button>\n```",displayName:"WithCustomRender",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/form-file-upload/stories/index.story.tsx#WithCustomRender"]={docgenInfo:WithCustomRender.__docgenInfo,name:"WithCustomRender",path:"packages/components/src/form-file-upload/stories/index.story.tsx#WithCustomRender"})}catch(__react_docgen_typescript_loader_error){}}}]);